{"ast":null,"code":"import _objectSpread from \"/Users/rzt/Github/draw-table/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { generateNewTableRow } from './../SvgUtils/tableData';\nexport var splitOrAddRow = function splitOrAddRow(data) {\n  console.log({\n    data: data\n  });\n\n  var oldRowCords = _objectSpread({}, data.tableRows[0].coordinates);\n\n  var oldHeight = data.cords.y - oldRowCords.y;\n  var newY = data.cords.y;\n  var newHeight = oldRowCords.y + oldRowCords.height - data.cords.y;\n  var row1 = generateNewTableRow({\n    id: 'x1',\n    isHeader: false,\n    cords: _objectSpread({}, oldRowCords, {\n      height: oldHeight\n    }),\n    styles: {\n      fill: '#000'\n    }\n  });\n  var row2 = generateNewTableRow({\n    id: 'x2',\n    isHeader: false,\n    cords: _objectSpread({}, oldRowCords, {\n      y: newY,\n      height: newHeight\n    }),\n    styles: {}\n  });\n  return [row1, row2];\n};","map":{"version":3,"sources":["/Users/rzt/Github/draw-table/src/components/SvgUtils/splitOrAddRow.js"],"names":["generateNewTableRow","splitOrAddRow","data","console","log","oldRowCords","tableRows","coordinates","oldHeight","cords","y","newY","newHeight","height","row1","id","isHeader","styles","fill","row2"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,yBAApC;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAErCC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA,IAAI,EAAJA;AAAF,GAAZ;;AAEA,MAAMG,WAAW,qBAAQH,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkBC,WAA1B,CAAjB;;AAEA,MAAMC,SAAS,GAAGN,IAAI,CAACO,KAAL,CAAWC,CAAX,GAAeL,WAAW,CAACK,CAA7C;AAEA,MAAMC,IAAI,GAAGT,IAAI,CAACO,KAAL,CAAWC,CAAxB;AACA,MAAME,SAAS,GAAIP,WAAW,CAACK,CAAZ,GAAgBL,WAAW,CAACQ,MAA7B,GAAuCX,IAAI,CAACO,KAAL,CAAWC,CAApE;AAEA,MAAMI,IAAI,GAAGd,mBAAmB,CAAC;AAC/Be,IAAAA,EAAE,EAAE,IAD2B;AAE/BC,IAAAA,QAAQ,EAAE,KAFqB;AAG/BP,IAAAA,KAAK,oBAAOJ,WAAP;AAAoBQ,MAAAA,MAAM,EAAEL;AAA5B,MAH0B;AAI/BS,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AAJuB,GAAD,CAAhC;AAOA,MAAMC,IAAI,GAAGnB,mBAAmB,CAAC;AAC/Be,IAAAA,EAAE,EAAE,IAD2B;AAE/BC,IAAAA,QAAQ,EAAE,KAFqB;AAG/BP,IAAAA,KAAK,oBAAOJ,WAAP;AAAoBK,MAAAA,CAAC,EAAEC,IAAvB;AAA6BE,MAAAA,MAAM,EAAED;AAArC,MAH0B;AAI/BK,IAAAA,MAAM,EAAE;AAJuB,GAAD,CAAhC;AAOA,SAAO,CAACH,IAAD,EAAOK,IAAP,CAAP;AACD,CA1BM","sourcesContent":["import { generateNewTableRow } from './../SvgUtils/tableData';\n\nexport const splitOrAddRow = (data) => {\n\n  console.log({ data });\n  \n  const oldRowCords = { ...data.tableRows[0].coordinates };\n\n  const oldHeight = data.cords.y - oldRowCords.y;\n\n  const newY = data.cords.y;\n  const newHeight = (oldRowCords.y + oldRowCords.height) - data.cords.y;\n\n  const row1 = generateNewTableRow({\n    id: 'x1',\n    isHeader: false,\n    cords: { ...oldRowCords, height: oldHeight },\n    styles: { fill: '#000' },\n  });\n\n  const row2 = generateNewTableRow({\n    id: 'x2',\n    isHeader: false,\n    cords: { ...oldRowCords, y: newY, height: newHeight },\n    styles: {},\n  });\n\n  return [row1, row2];\n};"]},"metadata":{},"sourceType":"module"}